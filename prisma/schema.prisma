generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                Int                @id @default(autoincrement())
  name              String
  slug              String             @unique
  price             String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  on_sale           Boolean            @default(false)
  purchasable       Boolean            @default(true)
  stock_status      String             @default("instock")
  type              String             @default("simple")
  wc_id             Int                @unique
  description       String?
  isPublished       Boolean            @default(true)
  short_description String?
  sku               String?
  images            ProductImage[]
  variations        ProductVariation[]
  categories        ProductCategory[]  @relation("ProductToCategory")
}

model ProductCategory {
  id              Int               @id @default(autoincrement())
  name            String
  wc_id           Int               @unique
  slug            String            @unique
  parentId        Int?
  parentCategory  ProductCategory?  @relation("ProductCategoryToProductCategory", fields: [parentId], references: [id])
  childCategories ProductCategory[] @relation("ProductCategoryToProductCategory")
  products        Product[]         @relation("ProductToCategory")
}

model ProductVariation {
  id           Int      @id @default(autoincrement())
  productId    Int
  wc_id        Int      @unique
  sku          String?
  price        String
  stock_status String   @default("instock")
  attributes   Json
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  alt       String?
  productId Int
  src       String
  position  Int?    @default(0)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model WooCommerceQuote {
  id                   Int      @id @default(autoincrement())
  woocommerceOrderId   Int      @unique @map("woocommerce_order_id")
  customerEmail        String   @map("customer_email")
  customerName         String   @map("customer_name")
  customerPhone        String?  @map("customer_phone")
  customerCompany      String?  @map("customer_company")
  shippingAddress      String?  @map("shipping_address")
  billingAddress       String?  @map("billing_address")
  lineItems            Json     @map("line_items")
  shippingTotal        Float    @default(0) @map("shipping_total")
  orderTotal           Float    @map("order_total")
  customerNote         String?  @map("customer_note")
  projectType          String   @default("general") @map("project_type")
  shippingRegion       String?  @map("shipping_region")
  estimatedFulfillment String?  @map("estimated_fulfillment")
  status               String   @default("pending")
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")
  metaData             Json?    @map("meta_data")

  @@map("woocommerce_quotes")
}
